@using Microsoft.AspNetCore.Identity
@using SP_Shopping.Utilities.ImageHandler
@model UserPageDto
@inject UserManager<ApplicationUser> _userManager
@inject UserProfileImageHandler _userProfileImageHandler

@{
    ViewData["Title"] = "UserPage";
}

<h1>User info:</h1>

<img class="img-fluid" style="width: 10em; aspect-ratio: 1/1;" src="@_userProfileImageHandler.GetImageOrDefaultURL(new ApplicationUser {Id = Model.Id})" />

<p>@Html.DisplayNameFor(u => u.UserName): @Html.DisplayFor(u => u.UserName)</p>
<p>@Html.DisplayNameFor(u => u.Email): @Html.DisplayFor(u => u.Email)</p>
@if (Model.Description is not null)
{
<p style="white-space: pre-wrap;">@Html.DisplayNameFor(u => u.Description): 
@Html.DisplayFor(u => u.Description)</p>
}
else
{
<p style="white-space: pre-wrap;">@Html.DisplayNameFor(u => u.Description): <span class="col-sm-10 text-muted fst-italic">No description has been specified</span></p>
}

<h2>Products</h2>
@if (Model.Id == User.FindFirstValue(ClaimTypes.NameIdentifier))
{
    <a asp-controller="Products" asp-action="Create" class=" btn btn-primary my-3">Create New</a>
}
@if (Model.ProductDetails is not null)
{
     <partial name="_ProductsGridPartial" model="Model.ProductDetails.Select(pd => new ProductDetailsDto() {Id = pd.Id, Name=pd.Name, Price=pd.Price, CategoryName=pd.CategoryName})"/>
}
