@using SP_Shopping.Hubs
@using SP_Shopping.Utilities.ImageHandler
@using SP_Shopping.Utilities.ImageHandlerKeys
@model IEnumerable<ProductDetailsDto>
@inject IImageHandlerDefaulting<ProductImageKey> _productImageHandler
@{
    ViewData["Title"] = "Home Page";
    string? UserId = (string?)ViewBag.UserId;
    string? UserName = (string?)ViewBag.UserName;
}

<div class="text-center">
    <h1 class="display-4">Welcome @UserName</h1>
    <p class="align-content-center">@(!string.IsNullOrWhiteSpace(UserId) ? $"{nameof(UserId)} is {UserId}" : "No user is logged in")</p>
    @if (User.IsInRole("Admin"))
    {
        <p class="align-content-center">"You are admin"</p>
    }
    
    <div class="my-4">
        <partial name="_SearchFormPartial" model="@("Products", "Search", "query")"/>
    </div>
    
    <div id="productCards">
        <partial name="_ProductCardsPartial" model="Model" /> 
    </div>
</div>

<script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>

<script type="module">
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/productHub")
        .configureLogging(signalR.LogLevel.Warning)
        .withAutomaticReconnect()
        .build();

    await connection.on("@(nameof(IProductHubClient.NotifyChangeInProductWithId))", async id => {
        const productCard = document.getElementById(`product_card_${id}`);
        let response = await fetch("/api/products/productcard" + "?" + new URLSearchParams({ "id": id }).toString());
        if (response.status === 404) {
            productCard.remove();
        }
        if (response.status === 200) {
            let productCardHTML = await response.text();
            productCard.outerHTML = productCardHTML;
        }
    });

    await connection.start();

</script>
