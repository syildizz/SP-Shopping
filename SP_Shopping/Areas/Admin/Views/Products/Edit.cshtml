@using SP_Shopping.Utilities.ImageHandler
@using SP_Shopping.Utilities.ImageHandlerKeys

@inject IImageHandlerDefaulting<ProductImageKey> _productImageHandler
@model AdminProductCreateDto

@{
    ViewData["Title"] = "Edit";
    IEnumerable<SelectListItem> categorySelectList = ViewBag.categorySelectList;
    const string imageInputId = "new-product-image";
}

<h1>Edit</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @if (Model.Id is not null)
        {
            <form id=reset-image-form asp-action="ResetImage" asp-route-Id="@Model.Id">
                <img 
                    class="img-fluid" 
                    style="width: 10em; aspect-ratio: 1/1"
                    src="@(_productImageHandler.GetImageOrDefaultURL(new((int)Model.Id)) )" 
                />
                @if (_productImageHandler.ImageExists(new((int)Model.Id)))
                {
                    <button type="submit" class="btn-close position-absolute translate-middle badge rounded-pill bg-danger"> </button>
                }
            </form>
        }
        <form asp-action="Edit" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="@Model.ProductImage" class="control-label"></label>
            <input 
                asp-for="@Model.ProductImage" 
                id="@imageInputId"
                class="form-control"
                autocomplete="profile picture" 
                aria-required="true" 
                placeholder="Please enter product picture."
                accept="image/*"
            />
            <span asp-validation-for="@Model.ProductImage" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="@Model.Name" class="control-label"></label>
            <input asp-for="@Model.Name" class="form-control" />
            <span asp-validation-for="@Model.Name" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="@Model.Price" class="control-label"></label>
            <input asp-for="@Model.Price" class="form-control" />
            <span asp-validation-for="@Model.Price" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="@Model.CategoryId" class="control-label"></label>
            <select asp-for="@Model.CategoryId" asp-items="@categorySelectList" class="form-select sm"></select>
        </div>
        <div class="form-group">
            <label asp-for="@Model.Description" class="control-label"></label>
            <textarea asp-for="@Model.Description" class="form-control"></textarea>
            <span asp-validation-for="@Model.Description" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="@Model.SubmitterId" class="control-label"></label>
            <input asp-for="@Model.SubmitterId" placeholder="Empty specifies self" class="form-control"/>
            <span asp-validation-for="@Model.SubmitterId" class="text-danger"></span>
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script type="module">
    import { validateImageFile } from "/js/site.js";
    const imageDiv = document.getElementById("@imageInputId");
    imageDiv.addEventListener("change", e => {
        let isValid = validateImageFile(imageDiv, imageDiv.files[0], 1_500_000);
        if (!isValid) {
            imageDiv.reportValidity();
        }
    });
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
